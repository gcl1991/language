package exception;

// 对可恢复的情况使用受检异常，对编程错误使用运行时异常
public class th70 {
    // 可控：强迫处理或传播，提高可靠性，违反开闭和封装原则。
    // 不可控：RuntimeException（编程错误/前提违例）和Error（资源不足）不需要也不应该被捕获, 属于不可恢复的情形。

    // 不应继承Error,Error属于系统,不应继承throwable, 不可控继承RuntimeException,可控继承Exception
    // 不要定义任何既不是受检异常也不是运行异常的抛出类型。

    // 如何抛出异常
    // 对于可恢复的情况，要抛出受检异常；
    // 对于程序错误，就要抛出运行时异常。
    // 不确定是否可恢复，就抛出未受检异常。
    // 不应让使用者解析异常的字符串, 要在受检异常上提供方法，以便协助程序恢复。
}
