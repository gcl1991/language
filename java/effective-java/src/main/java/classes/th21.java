package classes;

import java.util.HashMap;

// 为后代设计接口
public class th21 {
    // 1 虽然默认方法使向现有接口添加方法成为可能，但这样做存在很大风险。
    //      如果默认方法未被覆盖，则可能破坏实现类不变性条件；
    //      如果默认方法被覆盖，但是返回类型不兼容，则会运行时报错；
    //      如果默认方法被覆盖，但是与官方语义不同，则会造成误解
    // 2 如果非要使用默认方法向现有接口添加新方法，应该仔细考虑现有接口实现是否可能被默认方法破坏。
    // 3 尽管默认方法现在已经是Java平台的一部分，但是谨慎地设计接口仍然是非常重要的。
    //      你应该以三种不同的实现为目标。同样重要的是编写多个客户端程序，用这些程序使用每个新接口的实例来执行各种任务。
}
